[package]
name = "browsers"
version = "0.2.0"
authors = ["Madis Liias <madisliias@gmail.com>"]
edition = "2021"
description = "Browsers"
homepage = "https://browsers.software/"
repository = "https://github.com/Browsers-software/browsers"
license = "MIT OR Apache-2.0"

[dependencies]

# command-line argument parser
clap = "4.0.15"

# logging library
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["fmt", "std", "time", "local-time"] }
tracing-appender = "0.2"

rolling-file = "0.2.0"

libc = "0.2"
dirs = "4.0"

serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }

# UI library
#druid = { git = "https://github.com/linebender/druid.git", features = ["svg", "image"] }

# for local development
#druid = { path = "../druid/druid", features = ["png", "jpeg", "image"] }

druid = { git = "https://github.com/browsers-software/druid.git", branch = "browsers", features = ["png", "jpeg", "image"] }

# parse urls
url = "2.2.2"

# Parse .ini files (e.g Firefox profiles.ini)
configparser = "3.0.0"

# Hash Firefox path with cityhash64, to map it to
# locked installation in profiles.ini
naive-cityhash = "0.2.0"

# For making HTTP requests, e.g downloading browser profile images
attohttpc = "0.24.0"

# To create lazy static variables
lazy_static = "1.4.0"

# macOS Core Foundation bindings
# small selection of Core Foundation libs I happen to need
[target.'cfg(target_os = "macos")'.dependencies]
core-services = "0.2.0"
core-foundation = "0.9.2"
cocoa-foundation = "0.1.0"
objc = "0.2.7"

[target.'cfg(target_os = "linux")'.dependencies]
xdg-mime = "^0.3"

# to find default registered icons
glib = { version = "0.16.6", package = "gio" }

# to find icon theme and icon; (should be same version of gtk as druid is using)
gtk = { version = "0.16.2" }


#[profile.dev]
#lto = true

[profile.release]
#opt-level = 'z'     # Optimize for size.
lto = true           # Enable Link Time Optimization
#codegen-units = 1   # Reduce number of codegen units to increase optimizations.
#panic = 'abort'     # Abort on panic

# Base image is ubuntu:20.04, see https://github.com/cross-rs/cross/blob/main/docker/Dockerfile.x86_64-unknown-linux-gnu
# Unfortunately https://github.com/cross-rs/cross/pull/591 is not yet in stable version,
# so update from main to specific version once released https://github.com/cross-rs/cross/pkgs/container/x86_64-unknown-linux-gnu/versions?filters%5Bversion_type%5D=tagged
# Additionally install some libraries we need
[package.metadata.cross.target.x86_64-unknown-linux-gnu]
image = "browsers.software/x86_64-unknown-linux-gnu-gtk:local"
#image = "ghcr.io/cross-rs/x86_64-unknown-linux-gnu:main"
#pre-build = ["DEBIAN_FRONTEND=noninteractive apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install libpango-1.0-0 libpango1.0-dev libgtk-3-dev"]

[package.metadata.cross.target.aarch64-unknown-linux-gnu]
image = "browsers.software/aarch64-unknown-linux-gnu-gtk:local"
#image = "ghcr.io/cross-rs/aarch64-unknown-linux-gnu:main"
#pre-build = ["dpkg --add-architecture arm64 && DEBIAN_FRONTEND=noninteractive apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install libpango-1.0-0:arm64 libpango1.0-dev:arm64 libgtk-3-dev:arm64"]
